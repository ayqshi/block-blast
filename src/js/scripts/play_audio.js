function (require, module, exports) {
    "use strict";

    // Unregisters this module from the global Cocos Creator module registry.
    // The module ID "59d710ybCtKIK2fWdvSLN7z" and the name "play_audio" are for internal tracking.
    cc._RF.push(o, "59d710ybCtKIK2fWdvSLN7z", "play_audio");

    // Helper functions for class inheritance and decorators, typically generated by TypeScript.
    var __extends = (this && this.__extends) || (function () {
        // ... standard inheritance boilerplate
    })();
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        // ... standard decorator boilerplate
    };

    // Mark this module as an ES module.
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    // Imports the control singleton from a relative path.
    var controlModule = require("./control");

    // Shorthand for Cocos Creator's decorator system.
    var ccDecorators = cc._decorator;
    var ccclass = ccDecorators.ccclass; // Decorator to register a class as a Cocos Creator component.
    var property = ccDecorators.property; // Decorator to expose properties in the editor.

    /**
     * This class, named 'play_audio', is a Cocos Creator component.
     * It extends cc.Component, which is the base class for all component scripts in Cocos Creator.
     */
    var play_audio = (function (_super) {
        __extends(play_audio, _super);

        function play_audio() {
            var _this = _super.apply(this, arguments) || this;
            _this.audio = null; // A property to hold the audio clip, initialized to null.
            return _this;
        }

        /**
         * Cocos Creator lifecycle method called when the component is loaded.
         * This is where the core logic of the component resides.
         */
        play_audio.prototype.onLoad = function () {
            // Get a reference to the global `control` singleton.
            this.ctl = controlModule.control;
            // Call the `playAudio` method on the control singleton to play the audio.
            // The first parameter is the audio clip itself, and the second, `!1` (false),
            // prevents the audio from looping.
            this.ctl.playAudio(this.audio, false);
        };

        // Apply `@property` decorator to expose the `audio` variable in the Cocos Creator editor.
        __decorate([property(cc.AudioClip)], play_audio.prototype, "audio", void 0);
        // Apply `@ccclass` decorator to register this class as a usable component.
        __decorate([ccclass], play_audio);

        return play_audio;
    })(cc.Component);

    // Set the default export of this module to the play_audio class.
    exports.default = play_audio;

    // Pops the module off the internal Cocos Creator module stack.
    cc._RF.pop();
}